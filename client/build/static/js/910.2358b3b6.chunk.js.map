{"version":3,"file":"static/js/910.2358b3b6.chunk.js","mappings":"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","sources":["Routes/Register.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport Select from \"@mui/material/Select\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport AuthService from \"../services/auth.service\";\r\nimport { WithContext as ReactTags } from \"react-tag-input\";\r\nimport Spinner from \"../components/Spinner\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nconst user = AuthService.getCurrentUser();\r\n\r\nconst KeyCodes = {\r\n  comma: 188,\r\n  enter: 13,\r\n};\r\n\r\nconst delimiters = [KeyCodes.comma, KeyCodes.enter];\r\n\r\nexport default function Register() {\r\n  useEffect(() => {\r\n    if (!!user) {\r\n      AuthService.logout();\r\n      window.location.reload();\r\n    }\r\n  }, []);\r\n\r\n  const navigate = useNavigate();\r\n  const [Loading, setLoading] = useState(false);\r\n  const [data, setData] = useState({\r\n    phone: \"\",\r\n    password: \"\",\r\n    firstname: \"\",\r\n    lastname: \"\",\r\n    type: \"\",\r\n    farmertype: \"\",\r\n    address: \"\",\r\n  });\r\n\r\n  const [tags, setTags] = React.useState([]);\r\n  const [error, seterror] = useState(\"\");\r\n\r\n  const handleDelete = (i) => {\r\n    setTags(tags.filter((tag, index) => index !== i));\r\n  };\r\n\r\n  const handleAddition = (tag) => {\r\n    setTags([...tags, tag]);\r\n  };\r\n\r\n  const handleDrag = (tag, currPos, newPos) => {\r\n    const newTags = tags.slice();\r\n\r\n    newTags.splice(currPos, 1);\r\n    newTags.splice(newPos, 0, tag);\r\n\r\n    // re-render\r\n    setTags(newTags);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setData((prev) => {\r\n      return {\r\n        ...prev,\r\n        [name]: value,\r\n      };\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    seterror(\"\");\r\n    event.preventDefault();\r\n    const { phone, firstname, lastname, farmertype, type, password } = data;\r\n\r\n    if (!phone.match(\"[0-9]{10}\")) {\r\n      seterror(\"Please provide valid phone number\");\r\n    } else if (firstname.length === 0 && lastname.length === 0) {\r\n      seterror(\"Please provide valid first and last name\");\r\n    } else if (type.length === 0) {\r\n      seterror(\"Please select type\");\r\n    } else if (password.length < 6) {\r\n      seterror(\"password must be greater than 6 characters\");\r\n    } else if (type === \"farmer\" && farmertype.length === 0) {\r\n      seterror(\"select producer type\");\r\n    } else if (type === \"farmer\" && tags.length === 0) {\r\n      seterror(\"select atleast one commodity and press enter\");\r\n    } else {\r\n      seterror(\"no error\");\r\n      setLoading(true);\r\n      AuthService.register(\r\n        data.phone,\r\n        data.password,\r\n        data.firstname,\r\n        data.lastname,\r\n        data.type,\r\n        data.farmertype,\r\n        data.address,\r\n        tags\r\n      ).then(\r\n        () => {\r\n          toast.success(\"Registration successful!\", {\r\n            position: \"top-center\",\r\n            autoClose: 3000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"light\",\r\n          });\r\n          setTimeout(() => {\r\n            navigate(\"/registeration-successfull\");\r\n            window.location.reload();\r\n          }, 1000);\r\n        },\r\n        (error) => {\r\n          toast.warn(\"User Already Exists\", {\r\n            position: \"top-center\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"light\",\r\n          });\r\n          setData({\r\n            phone: \"\",\r\n            password: \"\",\r\n            firstname: \"\",\r\n            lastname: \"\",\r\n            type: \"\",\r\n            farmertype: \"\",\r\n            address: \"\",\r\n          });\r\n          setTimeout(() => {\r\n            navigate(\"/login\");\r\n            window.location.reload();\r\n          }, 1000);\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"authContainer\">\r\n      <ToastContainer\r\n        position=\"top-right\"\r\n        autoClose={5000}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n        theme=\"light\"\r\n        color=\"success\"\r\n      />\r\n      {/* Same as */}\r\n      <ToastContainer />\r\n      {!Loading ? (\r\n        <div className=\"authbox\">\r\n          <img\r\n            className=\"login_image\"\r\n            src=\"./images/slidestall2.webp\"\r\n            alt=\"logo\"\r\n          />\r\n          <form\r\n            className=\"register_details\"\r\n            component=\"form\"\r\n            noValidate\r\n            onSubmit={handleSubmit}\r\n            sx={{ mt: 3 }}\r\n          >\r\n            <img className=\"form-logo\" src=\"./logo.png\"  alt=\"form-logo\" />\r\n            <Typography className=\"form-heading\" component=\"h1\" variant=\"h5\">\r\n              Welcome to Wingrowagritech\r\n            </Typography>\r\n            <Typography className=\"form-heading\" mt={2} component=\"h1\" variant=\"h5\">\r\n              Signup with us\r\n            </Typography>\r\n            <Grid className=\"input-div-holder\" container spacing={2}>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  inputlabelprops={{\r\n                    style: { fontSize: 14, fontFamily: \"monospace\" },\r\n                  }}\r\n                  autoComplete=\"given-name\"\r\n                  name=\"firstname\"\r\n                  value={data.firstname}\r\n                  onChange={handleChange}\r\n                  required\r\n                  fullWidth\r\n                  id=\"firstName\"\r\n                  label=\"First Name\"\r\n                  autoFocus\r\n                  color=\"success\"\r\n                  className=\"textfield\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  inputlabelprops={{\r\n                    style: { fontSize: 14, fontFamily: \"monospace\" },\r\n                  }}\r\n                  required\r\n                  fullWidth\r\n                  id=\"lastName\"\r\n                  label=\"Last Name\"\r\n                  name=\"lastname\"\r\n                  value={data.lastname}\r\n                  onChange={handleChange}\r\n                  autoComplete=\"family-name\"\r\n                  color=\"success\"\r\n                  className=\"textfield\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  inputlabelprops={{\r\n                    style: { fontSize: 14, fontFamily: \"monospace\" },\r\n                  }}\r\n                  required\r\n                  fullWidth\r\n                  id=\"phone\"\r\n                  label=\"Mobile Number\"\r\n                  name=\"phone\"\r\n                  value={data.phone}\r\n                  onChange={handleChange}\r\n                  color=\"success\"\r\n                  className=\"textfield\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  inputlabelprops={{\r\n                    style: { fontSize: 14, fontFamily: \"monospace\" },\r\n                  }}\r\n                  required\r\n                  fullWidth\r\n                  name=\"password\"\r\n                  label=\"Password\"\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  value={data.password}\r\n                  onChange={handleChange}\r\n                  autoComplete=\"new-password\"\r\n                  color=\"success\"\r\n                  className=\"textfield\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <FormControl\r\n                  className=\"textfield\"\r\n                  sx={{ width: \"100%\", fontSize: 14 }}\r\n                >\r\n                  <InputLabel\r\n                    inputlabelprops={{\r\n                      style: { fontSize: 14, fontFamily: \"monospace\" },\r\n                    }}\r\n                    id=\"demo-simple-select-helper-label\"\r\n                  >\r\n                    Type\r\n                  </InputLabel>\r\n                  <Select\r\n                    sx={{ fontSize: \"1.2rem\" }}\r\n                    labelId=\"demo-simple-select-helper-label\"\r\n                    id=\"demo-simple-select-helper\"\r\n                    value={data.type}\r\n                    label=\"Type\"\r\n                    name=\"type\"\r\n                    onChange={handleChange}\r\n                    color=\"success\"\r\n                  >\r\n                    <MenuItem\r\n                      sx={{ fontSize: \"1.3rem\", fontFamily: \"monospace\" }}\r\n                      value=\"\"\r\n                    >\r\n                      <em>Select</em>\r\n                    </MenuItem>\r\n                    <MenuItem\r\n                      sx={{ fontSize: \"1.3rem\", fontFamily: \"monospace\" }}\r\n                      value={\"farmer\"}\r\n                    >\r\n                      Producer\r\n                    </MenuItem>\r\n                    <MenuItem\r\n                      sx={{ fontSize: \"1.3rem\", fontFamily: \"monospace\" }}\r\n                      value={\"customer\"}\r\n                    >\r\n                      Consumer\r\n                    </MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n\r\n              {data.type === \"farmer\" && (\r\n                <Grid item xs={12}>\r\n                  <FormControl className='textfield' color=\"success\" sx={{ width: \"100%\" }}>\r\n                    <InputLabel id=\"demo-simple-select-helper-label\">\r\n                      Producer Type\r\n                    </InputLabel>\r\n                    <Select\r\n                      sx={{ fontSize: \"1.3rem\" }}\r\n                      labelId=\"demo-simple-select-helper-label\"\r\n                      id=\"demo-simple-select-helper\"\r\n                      value={data.farmertype}\r\n                      label=\"farmertype\"\r\n                      name=\"farmertype\"\r\n                      onChange={handleChange}\r\n                    >\r\n                      <MenuItem value=\"\">\r\n                        <em>None</em>\r\n                      </MenuItem>\r\n                      <MenuItem\r\n                        sx={{ fontSize: \"1.3rem\", fontFamily: \"monospace\" }}\r\n                        value={\"farmers\"}\r\n                      >\r\n                        Farmer\r\n                      </MenuItem>\r\n                      <MenuItem\r\n                        sx={{ fontSize: \"1.3rem\", fontFamily: \"monospace\" }}\r\n                        value={\"Organic farmers\"}\r\n                      >\r\n                        Organic Farmer\r\n                      </MenuItem>\r\n                      <MenuItem\r\n                        sx={{ fontSize: \"1.3rem\", fontFamily: \"monospace\" }}\r\n                        value={\"FPO/FPC\"}\r\n                      >\r\n                        FPO/FPC\r\n                      </MenuItem>\r\n                      <MenuItem\r\n                        sx={{ fontSize: \"1.3rem\", fontFamily: \"monospace\" }}\r\n                        value={\"Retailer\"}\r\n                      >\r\n                        Retailer\r\n                      </MenuItem>\r\n                      <MenuItem\r\n                        sx={{ fontSize: \"1.3rem\", fontFamily: \"monospace\" }}\r\n                        value={\"Wholesaler\"}\r\n                      >\r\n                        Wholesaler\r\n                      </MenuItem>\r\n                      <MenuItem\r\n                        sx={{ fontSize: \"1.3rem\", fontFamily: \"monospace\" }}\r\n                        value={\"Start-up\"}\r\n                      >\r\n                        Start Up\r\n                      </MenuItem>\r\n                      <MenuItem\r\n                        sx={{ fontSize: \"1.3rem\", fontFamily: \"monospace\" }}\r\n                        value={\"Vocal for local producers\"}\r\n                      >\r\n                        Vocal for Local Producers\r\n                      </MenuItem>\r\n                    </Select>\r\n                  </FormControl>\r\n                </Grid>\r\n              )}\r\n\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  inputlabelprops={{\r\n                    style: { fontSize: 14, fontFamily: \"monospace\" },\r\n                  }}\r\n                  fullWidth\r\n                  name=\"address\"\r\n                  label=\"address (optional)\"\r\n                  type=\"address\"\r\n                  id=\"address\"\r\n                  value={data.address}\r\n                  onChange={handleChange}\r\n                  autoComplete=\"new-address\"\r\n                  color=\"success\"\r\n                  className=\"textfield\"\r\n                />\r\n              </Grid>\r\n              {data.type === \"farmer\" && (\r\n                <Grid item xs={12}>\r\n                  <ReactTags\r\n                    InputProps={{ style: { fontSize: 15 } }}\r\n                    inputlabelprops={{ style: { fontSize: 15 } }}\r\n                    tags={tags}\r\n                    delimiters={delimiters}\r\n                    handleDelete={handleDelete}\r\n                    handleAddition={handleAddition}\r\n                    handleDrag={handleDrag}\r\n                    inputFieldPosition=\"bottom\"\r\n                    autocomplete\r\n                    color=\"success\" \r\n              className='textfield'\r\n                    placeholder=\"Add Selling Products Names and press enter\"\r\n                  />\r\n                </Grid>\r\n              )}\r\n            </Grid>\r\n            {error !== \"no error\" && (\r\n              <h3\r\n                style={{ alignSelf: \"center\", color: \"red\", marginTop: \"10px\" }}\r\n              >\r\n                {error}\r\n              </h3>\r\n            )}\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              className=\"signup-btn\"\r\n              variant=\"contained\"\r\n              color=\"success\"\r\n              size=\"large\"\r\n              sx={{ mt: 3, mb: 2 }}\r\n            >\r\n              Register\r\n            </Button>\r\n            <Grid container justifyContent=\"center\">\r\n              <Grid item>\r\n                <Link className=\"form-link\" to=\"/login\" variant=\"body2\">\r\n                  Already have an account? <span className=\"login\">Log In</span>\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n      ) : (\r\n        <Spinner />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"names":["user","AuthService","delimiters","Register","useEffect","window","location","reload","navigate","useNavigate","useState","Loading","setLoading","phone","password","firstname","lastname","type","farmertype","address","data","setData","React","tags","setTags","error","seterror","handleChange","e","target","name","value","prev","className","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","theme","color","src","alt","component","noValidate","onSubmit","event","preventDefault","match","length","then","toast","progress","undefined","setTimeout","sx","mt","variant","container","spacing","item","xs","sm","inputlabelprops","style","fontSize","fontFamily","autoComplete","onChange","required","fullWidth","id","label","autoFocus","width","labelId","InputProps","handleDelete","i","filter","tag","index","handleAddition","handleDrag","currPos","newPos","newTags","slice","splice","inputFieldPosition","autocomplete","placeholder","alignSelf","marginTop","size","mb","justifyContent","to"],"sourceRoot":""}