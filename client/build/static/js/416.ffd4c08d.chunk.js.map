{"version":3,"file":"static/js/416.ffd4c08d.chunk.js","mappings":"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","sources":["Routes/Profile.js","services/user.service.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js"],"sourcesContent":["import React , {useState , useEffect , useRef} from \"react\";\r\nimport '../styles/Profile.css'\r\nimport UserService from \"../services/user.service\";\r\nimport Spinner from '../components/Spinner'\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nconst Profile = () => {\r\n  const [user , setuser] = useState();\r\n  const [Loading, setLoading] = useState(false)\r\n  const [toggleImage, settoggleImage] = useState(false)\r\n  const [toggleAddress, settoggleAddress] = useState(false)\r\n  let addressText = useRef(\"\")\r\n  const [newPic, setNewPic] = useState(\r\n    {\r\n        photo: '',\r\n    }\r\n);\r\n\r\n\r\nuseEffect(() => {\r\n  UserService.getAllUsers().then(res=>{\r\n    const response = res?.data\r\n    setuser(response[0])\r\n  })\r\n}, [])\r\n\r\nconst handleSubmitAddress = (e) => {\r\n  e.preventDefault();\r\n  setLoading(true);\r\n  let address = addressText.current.value;\r\n\r\n  if(address && address.length!==0){\r\n    AuthService.addAddress(address).then(res=>{\r\n      setuser(res);\r\n      window.location.reload();\r\n      setLoading(false);\r\n    })\r\n  }\r\n  settoggleAddress(!toggleAddress)\r\n}\r\n\r\nconst handleSubmit = (e) => {\r\n  e.preventDefault();\r\n  const formData = new FormData();\r\n  formData.append('photo', newPic.photo);\r\n  setLoading(true)\r\n  \r\n  if(formData){\r\n    AuthService.addimage(formData).then(res=>{\r\n      setuser(res);\r\n      window.location.reload();\r\n      setLoading(false)\r\n    })\r\n  }\r\n  settoggleImage(!toggleImage)\r\n}\r\n\r\nconst handlePhoto = (e) => {\r\n  setNewPic({...newPic, photo: e.target.files[0]});\r\n}\r\n\r\nconst handleAddresstoggle = () => {\r\n  settoggleAddress(!toggleAddress)\r\n}\r\n\r\nconst handleImagetoggle = () => {\r\n  settoggleImage(!toggleImage)\r\n}\r\n\r\n\r\n  return (\r\n    <div>\r\n      {!Loading && user ? \r\n      <div className=\"profile\">\r\n        <div className=\"profile_container\">\r\n        <div className=\"profile_image_wrapper\">\r\n            <img className=\"profile_img\" src={user.pic ? user.pic : \" \"} alt=\"profile\"/>\r\n        </div>\r\n        <div className=\"profile_details\">\r\n          <div>\r\n          Mobile No : {user.phone}\r\n          </div>\r\n          <div>\r\n          Name : {user.firstname} {user.lastname}\r\n          </div>\r\n          {user.address && <div>\r\n            Address : {user.address}\r\n          </div>}\r\n        </div>\r\n        <div className=\"profile_btn_grp\">\r\n        {\r\n        toggleImage ? \r\n        <form className=\"form_uploaddata\" onSubmit={handleSubmit} encType='multipart/form-data'>\r\n            <input \r\n                type=\"file\" \r\n                accept=\".png, .jpg, .jpeg\"\r\n                name=\"photo\"\r\n                style={{marginLeft:\"auto\"}}\r\n                onChange={handlePhoto}\r\n            />\r\n                    <input \r\n                type=\"submit\"\r\n                className=\"profile_btn_toggle\"\r\n            />\r\n            <button className=\"profile_btn_toggle\" onClick={()=>settoggleImage(!toggleImage)}>cancel</button>\r\n        </form>\r\n        :\r\n        <button className=\"profile_btn_toggle\" onClick={handleImagetoggle}>Upload Profile</button>\r\n        }\r\n       {\r\n       toggleAddress?\r\n       <form className=\"form_uploaddata\" onSubmit={handleSubmitAddress}>\r\n            <input \r\n                type=\"text\" \r\n                name=\"address\"\r\n                ref={addressText}\r\n                \r\n            />\r\n                    <input \r\n                type=\"submit\"\r\n                className=\"profile_btn_toggle\"\r\n            />\r\n            <button className=\"profile_btn_toggle\" onClick={()=>settoggleAddress(!toggleAddress)}>cancel</button>\r\n        </form>\r\n        :\r\n            <button className=\"profile_btn_toggle\" onClick={handleAddresstoggle}>{user.address?\"Update Address\":\"Add Address\"}</button>\r\n        }\r\n        </div>\r\n        </div>\r\n        </div>:<Spinner/>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import axios from 'axios';\r\nimport authHeader from './auth.headers';\r\n\r\n// const API_URL = 'https://wingrowagritech.herokuapp.com/';\r\nconst API_URL = \"http://localhost:4000/\";\r\n\r\n const getPublicContent = () => {\r\n    return axios.get(API_URL + 'all');\r\n  }\r\n\r\n  const getInOutdata = () => {\r\n    return axios.get(API_URL + 'inwardoutward' , { headers: authHeader() });\r\n  }\r\n\r\n  const getStallsData = () => {\r\n    return axios.get(API_URL + 'stalls', { headers: authHeader() });\r\n  }\r\n\r\n  const getAdminData = () => {\r\n    return axios.get(API_URL + 'admin', { headers: authHeader() });\r\n  }\r\n\r\n  const getFarmers = () => {\r\n    return axios.get(API_URL + 'farmer', { headers: authHeader() });\r\n  }\r\n\r\n  const getAllUsers = () => {\r\n    return axios.get(API_URL + 'allusers', { headers: authHeader() });\r\n  }\r\n\r\n  const getUsers = () => {\r\n    return axios.get(API_URL + 'users', { headers: authHeader() });\r\n  }\r\n  \r\n\r\n\r\nconst UserService = {\r\n    getPublicContent,\r\n    getStallsData,\r\n    getAdminData,\r\n    getInOutdata,\r\n    getFarmers,\r\n    getAllUsers,\r\n    getUsers\r\n  };\r\n  \r\n  export default UserService;\r\n\r\n\r\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}"],"names":["useState","user","setuser","Loading","setLoading","toggleImage","settoggleImage","toggleAddress","settoggleAddress","addressText","useRef","photo","newPic","setNewPic","useEffect","UserService","then","res","response","data","className","src","pic","alt","phone","firstname","lastname","address","onSubmit","e","preventDefault","formData","FormData","append","AuthService","window","location","reload","encType","type","accept","name","style","marginLeft","onChange","target","files","onClick","current","value","length","ref","Spinner","API_URL","getPublicContent","axios","getStallsData","headers","authHeader","getAdminData","getInOutdata","getFarmers","getAllUsers","getUsers","_defineProperty","obj","key","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","i","arguments","source","forEach","getOwnPropertyDescriptors","defineProperties"],"sourceRoot":""}